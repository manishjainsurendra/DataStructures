//DEQUeue(Double ended queue)

package com.company;
import java.util.*;
class MyQueue {
    int[] arr ;
    int left,right;
    // constructor
    public MyQueue(int capacity){
        this.arr = new int[capacity];
        this.left = -1;
        this.right = -1;
    }
    public void insertright (int item){
        if((this.right+1)%this.arr.length == this.left){
            System.out.println("overflow");
            return;
        }
        if(this.left==-1 && this.right ==-1)
            this.left++;

        this.right = (this.right+1)%this.arr.length;
        this.arr[this.right] = item;
    }
    public void insertleft (int item){
        if((this.right+1)%this.arr.length == this.front){
            System.out.println("overflow");
            return;
        }
        if(this.left==-1 && this.right ==-1)
            this.left =this.right = this.arr.length-1;
         else if(this.left==0){
            this.left=this.arr.length-1;
        }   
        else
        this.left = this.left-1;
        
        this.arr[this.left] = item;
    }
    //delete element from stack
    public int deleteleft (){
        if(this.left==-1){
            System.out.println("underflow");
            return -1;
        }
        if(this.left == this.right){
            int item = this.arr[this.left];
            this.left=this.right=-1;
            return item;
        }
        int item = this.arr[this.left];
        this.left= (this.left+1)%this.arr.length;
        return item;
    }
    public int deleteright (){
        if(this.left==-1){
            System.out.println("underflow");
            return -1;
        }
        if(this.left == this.right){
            int item = this.arr[this.right];
            this.left=this.right=-1;
            return item;
        }
        int item = this.arr[this.right];
        if(this.right ==0 ){
            this.right = this.arr.length-1;
        }
        else
        this.right= this.right-1;
        return item;
    }
   //print Queue elements
    public void print(){


        if(this.right < this.left){
            for(int i=this.left;i<this.arr.length;i++) {
                System.out.print(arr[i]+"\t");
            }
            for(int i=this.right;i<this.left;i++) {
                System.out.print(arr[i]+"\t");
            }
            return;
        }
        for(int i=this.left;i<=this.right;i++) {
            System.out.print(arr[i]+"\t");
        }
    }

}
public class Main {

    public static void main(String[] args) {
	// write your code here
        Scanner sc =new Scanner(System.in);
        System.out.print("enter capacity of queue:");
        int capacity = sc.nextInt();
        int cmd=0;
        MyQueue queue1 = new MyQueue(capacity);
        while(cmd!=4){
            System.out.println("1.Insert");
            System.out.println("2.Delete");
            System.out.println("3.Display");
            System.out.println("4.Exit");
            cmd = sc.nextInt();
            if(cmd==1){
                int element = sc.nextInt();
                queue1.enqueue(element);
            }
            else if(cmd==2){
                int element = queue1.dequeue();
                System.out.println(element);
            }
            else if(cmd==3){
                queue1.print();
            }
            else {
                System.out.println("exited sucessfully");
            }

        }
    }
}

